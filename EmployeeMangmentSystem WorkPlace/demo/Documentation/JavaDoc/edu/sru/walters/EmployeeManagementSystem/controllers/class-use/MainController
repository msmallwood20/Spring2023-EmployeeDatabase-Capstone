   

package edu.sru.walters.EmployeeManagementSystem.controllers;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;

import edu.sru.walters.EmployeeManagementSystem.models.Users;
import edu.sru.walters.EmployeeManagementSystem.repository.UserRepository;

//In this Class is our main controller that allows thymeleaf to locate and call web pages from the src/main/resources/templates folder, it also Requires the "@Controller" Tag
@Controller

 /**
 * The class Main controller
 */ 
public class MainController {

//These methods have the @GetMapping("***") Tag, inside of the parentheses, is the name that thymeleaf will use when calling to find that page-Explained more on the HTML pages
//The return "***"; references directly to the web pages names that are located in the src/main/resources/templates folder
	    @Autowired
	    UserRepository userRepository;
	    
		@GetMapping("/")


/** 
 *
 * View home page
 *
 * @return String
 */
		public String viewHomePage()  
		{

			return "index";
		}
		
		@GetMapping(value="/loginpage")


/** 
 *
 * Login
 *
 * @return String
 */
		public String login() 
		{

			return "loginpage";
		}
		
		@GetMapping(value="/registration")


/** 
 *
 * Register
 *
 * @param model  the model
 * @return String
 */
		public String register(Model model) 
		{

			model.addAttribute("users", new Users());
			return "registration";
		}
		
		
		@GetMapping(value="/dashboard")


/** 
 *
 * Dashboard
 *
 * @return String
 */
		public String dashboard() 
		{

			return "dashboard";
		}
		
		@GetMapping(value="/accountsettings")


/** 
 *
 * Accountsettings
 *
 * @return String
 */
		public String accountsettings() 
		{

			return "accountsettings";
		}
		
		@PostMapping("/process_registration")

/** 
 *
 * Process registration
 *
 * @param users  the users
 * @return String
 */
		public String processRegistration(Users users) { 

			
			BCryptPasswordEncoder passwordEncoder = new BCryptPasswordEncoder();
			String encodedPassword = passwordEncoder.encode(users.getPassword());
			users.setPassword(encodedPassword);
			userRepository.save(users);
		
			return "registrationsucces";
		}
		
		@GetMapping("/users")

/** 
 *
 * List users
 *
 * @param model  the model
 * @return String
 */
		public String listUsers(Model model) { 

			List<Users> listUsers = userRepository.findAll();
			model.addAttribute("listUsers", listUsers);
			
			return "users";
		}
}